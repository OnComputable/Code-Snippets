1-->>echo $PATH		// displays your home directory

2-->>pwd		// tells you the path of the working directory

3-->>cd 		// changes directory and without argument gets us back to home directory directly. cd can also fail if you don't have proper permission to access a folder.

4-->>mkdir		// used to create the directory.

5-->>rmdir directoryname	// removes the directory.

6-->>cd ..		// moves one level up in the directory hierarchy.

7-->>cd ../..		// moves two level up.

8-->>ls			// lists the files in the working folder

9-->>ls -Fx		// shows executable files in listing.

10-->>ls -aFx		// shows all hidden executable files in listing.

11-->>ls -xR		// shows all the files recursively for all present and the inner folder from the native path.

12-->>cat filename	// used to display the contents of the small files in the terminals.

13-->>cat -vn		// numbers the line and also -v option shows the non-printable characters.

14-->>cat > foo		// creates a file names foo and you can start typing in it directly.

15-->>cp sourcepath destinationpath	// copies file from source to destination.

16-->>cp file1 file2 file3 dirnametobecopiedin	// can copy multiple files in another directory.

17-->>cp file*	dirnametobecopiedin	// * is used as matching pattern to copy file named file :).

18-->>cp -R progs newprogs		// copies directory structure from source folder to destination folder.

19-->>rm * 			// all files willl be gone beware!!

20-->>rm -i chap1 chap2		// -i for interactive ask's are you confirming to delete a file.

21-->>rm -rf *			// removes files forcibally also files which are protected beware!!

22-->>mv chap1 chap2		// renames the file named chap1 to chap2.

23-->>mv chap1 progs		// moves chap1 ro directory named progs. mv have a dual nature.

24-->>more filename		// pager command which shows the file as for viewing.
					you can also invoke vi from more or using less pager as well using the v command, you cabn also use regular expression for parttern matching
				in more using / and also find help using h command. It's variations are limitless with other options.
 
25-->>lp filename		// printing a file using lp subsystem.

26-->>cancel printername	// cancels the job given to the specific printer.

27-->>file *			// identifies file types using the MAGIC NUMBER that is embedded in the first few bytes of every file.

28-->>wc filename		// counts lines, words and characters from the file.

29-->>wc file1 file2 file3	// counts parameters of multiple lines as well.

30-->>od -bc octal_data_filename	// displays the octal data in the friendlier format.

31-->>cmp filename1 filename2		// compares two files byte by byte and return the first occurences of mismatch.

32-->>cmp -l file1 file2		// lists all the mismatch acquired in the both of the files in the form of list.

33-->>comm file1 file2		// checks for the common in the 2 files, not understood well:(.

34-->>diff file1 file2		// diff tells you what changes needs to be made for making the file identical.

35-->>dos2unix filename	// converts dos files into unix file format.

36-->>unix2dos filename		// converts unix files in the format of dos.

37-->>gzip filename		// compress a file upto certain limits. limits are dependent on the type of data.

38-->>gunzip filename		// to decompress the .gz file.

39-->>tar -cvf filename.tar	// creates an archive of all the directory and files here c means create, v means verbose and f is specifying archive arch.
				use the man page for different options using tar.
40-->zip and unzip		// zip and unzip option performs compression and decompression respectively along with creating an archive as tar files .
